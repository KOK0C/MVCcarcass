<?php
/**
 * Created by PhpStorm.
 * User: Ihor
 * Date: 17.10.2017
 * Time: 16:56
 */

namespace IhorRadchenko\App\Models;

use IhorRadchenko\App\Components\Traits\File;
use IhorRadchenko\App\DataBase;
use IhorRadchenko\App\Exceptions\DbException;
use IhorRadchenko\App\Model;

/**
 * Class Brand
 * @package IhorRadchenko\App\Models
 * @property Page $page
 */
class Brand extends Model
{
    use File;

    const TABLE = 'brands';

    public $name;
    public $description;
    private $logo;
    private $page_id;

    private $uploadDir = '/public/img/logo/';
    protected $fields = [
        'name' => '',
        'logo' => '',
        'description' => '',
        'page_id' => ''
    ];

    public function getLogo(): string
    {
        return '/public/img/logo/' . $this->logo;
    }

    /**
     * @param string $mark
     * @return null
     * @throws \IhorRadchenko\App\Exceptions\DbException
     */
    public static function findOneByMark(string $mark)
    {
        $sql = 'SELECT * FROM ' . self::TABLE . ' WHERE `name` = :mark LIMIT 1';
        $result = DataBase::getInstance()->query($sql, self::class, ['mark' => $mark]);
        return (! empty($result)) ? $result[0] : null;
    }

    /**
     * @param array $data
     * @param array $rules
     * @return bool
     */
    public function load(array $data, array $rules): bool
    {
        if ($data['logo']['error'] === 0) {
            if (! $data['logo'] = $this->loadFile($data['logo'],  'png', $_SERVER['DOCUMENT_ROOT'] . $this->uploadDir)) {
                return false;
            }
        } else {
            unset($data['logo']);
        }
        return parent::load($data, $rules); // TODO: Change the autogenerated stub
    }

    /**
     * @return bool
     * @throws DbException
     */
    public function delete(): bool
    {
        $this->page->delete();
        $iconDir = $_SERVER['DOCUMENT_ROOT'] . '/public/img/icon/' . str_replace(' ', '_', mb_strtolower($this->name));
        $cars = Car::findCarsByBrand($this->name);
        if ($cars) {
            foreach ($cars as $car) {
                $car->delete();
            }
        }
        if (file_exists($_SERVER['DOCUMENT_ROOT'] . $this->getLogo())) {
            unlink($_SERVER['DOCUMENT_ROOT'] . $this->getLogo());
        }
        if (file_exists($iconDir)) {
            rmdir($iconDir);
        }
        return parent::delete(); // TODO: Change the autogenerated stub
    }

    public function __isset($name)
    {
        switch ($name) {
            case 'page':
                return isset($this->page_id);
                break;
            default:
                return false;
        }
    }

    /**
     * @param $name
     * @return bool|Page
     * @throws DbException
     */
    public function __get($name)
    {
        switch ($name) {
            case 'page':
                return Page::findById($this->page_id);
                break;
            default:
                return false;
        }
    }
}